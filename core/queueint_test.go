package core

import (
	"testing"

	"github.com/dicedb/dice/testutils"
)

type queueinttcase struct {
	op   byte
	val  int64
	list []int64
}

func TestQueueInt(t *testing.T) {
	qi := NewQueueInt()
	for _, tc := range []queueinttcase{
		{'i', 1, []int64{1}},
		{'i', 2, []int64{1, 2}},
		{'i', 3, []int64{1, 2, 3}},
		{'i', 4, []int64{1, 2, 3, 4}},
		{'i', 5, []int64{1, 2, 3, 4, 5}},
		{'i', 6, []int64{1, 2, 3, 4, 5, 6}},
		{'i', 78930943, []int64{1, 2, 3, 4, 5, 6, 78930943}},
		{'i', 11918629, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629}},
		{'i', 68141363, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629, 68141363}},
		{'i', 25324944, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944}},
		{'i', 22402494, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494}},
		{'i', 51881029, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029}},
		{'i', 79283552, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552}},
		{'i', 67459748, []int64{1, 2, 3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{2, 3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{3, 4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{4, 5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{5, 6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{6, 78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{78930943, 11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{11918629, 68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{68141363, 25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{25324944, 22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{22402494, 51881029, 79283552, 67459748}},
		{'r', 0, []int64{51881029, 79283552, 67459748}},
		{'r', 0, []int64{79283552, 67459748}},
		{'r', 0, []int64{67459748}},
		{'r', 0, []int64{}},
		{'i', 1, []int64{1}},
		{'i', 2, []int64{1, 2}},
	} {
		switch tc.op {
		case 'i':
			qi.Insert(tc.val)
		case 'r':
			qi.Remove()
		}

		obsList := qi.Iterate()
		if !testutils.EqualInt64Slice(tc.list, obsList) {
			t.Errorf("queueint test failed. should have been %v but found %v", tc.list, obsList)
		}
	}
}
